@model List<TblBlog>

@{
    bool isShowMessage = TempData["IsSuccess"] != null;
    bool isSuccess = false;
    string message = string.Empty;
    if (isShowMessage)
    {
        isSuccess = Convert.ToBoolean(TempData["IsSuccess"]);
        message = Convert.ToString(TempData["Message"])!;
    }
}

@if (isShowMessage)
{
    if (isSuccess)
    {
        <div class="alert alert-success mb-3" role="alert">
            @message
        </div>
    }
    else
    {
        <div class="alert alert-danger mb-3" role="alert">
            @message
        </div>
    }
}

<a href="/Blog/Create" class="btn btn-outline-success">Create New Blog</a>

<table class="table table-responsive">
    <thead>
        <tr>
            <th>No.</th>
            <th>Title</th>
            <th>Author</th>
            <th>Content</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count; i++)
        {
            var Blog = Model[i];
            <tr>
                <td>
                    <a href="/Blog/Edit/@(Blog.BlogId)" class="btn btn-warning">Edit</a>
                    <a href="/Blog/Delete/@(Blog.BlogId)" class="btn btn-danger">Delete</a>
                    @* <a href="/Blog/Delete?blogId=@(Blog.BlogId)" class="btn btn-danger">Delete</a> *@
                    @* I can use that way if i change pattern name in Program.cs *@

                </td>
                <td>@(i + 1)</td>
                <td>@Blog.BlogTitle</td>
                <td>@Blog.BlogAuthor</td>
                <td>@Blog.BlogContent</td>
            </tr>
        }
    </tbody>
</table>

